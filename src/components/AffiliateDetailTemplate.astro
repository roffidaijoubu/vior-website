---
import EventCountdown from './EventCountdown.astro';
import { getEventsByAffiliateSlug } from '../data/events';

interface Props {
  name: string;
  image: string;
  description: string;
  socialLinks: { platform: string; url: string }[];
  slug: string;
  pastWorks?: { title: string; youtubeUrl: string }[];
}

const { name, image, description, socialLinks, slug, pastWorks } = Astro.props;
const affiliateEvents = getEventsByAffiliateSlug(slug);
const firstEvent = affiliateEvents[0];
const remainingEvents = affiliateEvents.slice(1);
---

<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
  <!-- First event on mobile -->
  <div class="lg:hidden mb-8 -my-16">
    {firstEvent && (
      <EventCountdown
        eventName={firstEvent.name}
        eventImage={firstEvent.image}
        eventUrl={firstEvent.url}
        eventDatetime={firstEvent.datetime}
        eventButtonLabel={firstEvent.buttonLabel}
        eventSecondaryUrl={firstEvent.secondaryUrl}
      />
    )}
  </div>

  <div class="flex flex-col lg:flex-row lg:space-x-8">
    <!-- Main column (2/3 width on desktop) -->
    <div class="lg:w-2/3">
      <div class="mb-8 text-center lg:text-left">
        <img src={image} alt={name} class="w-64 h-64 mx-auto lg:mx-0 rounded-full object-cover mb-4">
        <h1 class="text-4xl font-bold mb-2">{name}</h1>
      </div>
      
      <div class="prose lg:prose-xl mb-8">
        <p>{description}</p>
      </div>
      
      <div class="flex justify-center lg:justify-start space-x-4 mb-8">
        {socialLinks.map(link => (
          <a href={link.url} target="_blank" rel="noopener noreferrer" class="text-blue-500 hover:text-blue-700">
            {link.platform}
          </a>
        ))}
      </div>

      <!-- Past Works Section -->
      {pastWorks && pastWorks.length > 0 && (
        <div class="mb-8">
          <h2 class="text-2xl font-bold mb-4">Past Works</h2>
          <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">
            {pastWorks.map(work => (
              <div class="video-thumbnail">
                <a 
                  href={work.youtubeUrl} 
                  class="glightbox" 
                  data-glightbox={`title: ${work.title}; description: .custom-desc-${work.youtubeUrl.split('v=')[1]}`}
                >
                  <img
                    src={`https://img.youtube.com/vi/${new URL(work.youtubeUrl).searchParams.get('v')}/0.jpg`}
                    alt={work.title}
                    class="w-full aspect-video object-cover rounded-lg"
                  />
                  <p class="mt-2 text-sm text-center">{work.title}</p>
                </a>
                <div class={`glightbox-desc custom-desc-${work.youtubeUrl.split('v=')[1]}`}>
                  <a href={work.youtubeUrl} target="_blank" rel="noopener noreferrer" class="inline-block bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700 transition-colors">
                    Watch on YouTube
                  </a>
                </div>
              </div>
            ))}
          </div>
        </div>
      )}
    </div>

    <!-- Sidebar column (1/3 width on desktop) -->
    <div class="hidden lg:block lg:w-1/3 lg:sticky lg:top-4 lg:self-start rounded-lg">
      <div class="lg:max-h-[calc(100vh-2rem)] lg:overflow-y-auto lg:pr-4 rounded-lg">
        <h2 class="text-2xl font-bold sticky top-0 bg-white py-2 px-4 rounded-lg">Upcoming Events</h2>
        {affiliateEvents.map(event => (
          <EventCountdown
            eventName={event.name}
            eventImage={event.image}
            eventUrl={event.url}
            eventDatetime={event.datetime}
            eventButtonLabel={event.buttonLabel}
            eventSecondaryUrl={event.secondaryUrl}
          />
        ))}
      </div>
    </div>
  </div>

  <!-- Remaining events on mobile -->
  {remainingEvents.length > 0 && (
    <div class="lg:hidden mt-8">
      <h2 class="text-2xl font-bold mb-4">More Upcoming Events</h2>
      {remainingEvents.map(event => (
        <EventCountdown
          eventName={event.name}
          eventImage={event.image}
          eventUrl={event.url}
          eventDatetime={event.datetime}
          eventButtonLabel={event.buttonLabel}
          eventSecondaryUrl={event.secondaryUrl}
        />
      ))}
    </div>
  )}
</div>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/glightbox/dist/css/glightbox.min.css" />

<script>
  import GLightbox from 'glightbox';

  document.addEventListener('DOMContentLoaded', () => {
    GLightbox({
      selector: '.glightbox',
      touchNavigation: true,
      loop: true,
      autoplayVideos: true,
      plyr: {
        config: {
          ratio: '16:9',
          muted: false,
          hideControls: false,
          youtube: {
            noCookie: true,
            rel: 0,
            showinfo: 0,
            iv_load_policy: 3
          }
        }
      },
      descPosition: 'bottom'
    });
  });
</script>